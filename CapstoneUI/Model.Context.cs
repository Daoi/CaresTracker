//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CapstoneUI
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CARESEntities : DbContext
    {
        public CARESEntities()
            : base("name=CARESEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CARESUser> CARESUsers { get; set; }
        public virtual DbSet<Event> Events { get; set; }
        public virtual DbSet<HousingDevelopment> HousingDevelopments { get; set; }
        public virtual DbSet<Interaction> Interactions { get; set; }
        public virtual DbSet<InteractionService> InteractionServices { get; set; }
        public virtual DbSet<Region> Regions { get; set; }
        public virtual DbSet<Residence> Residences { get; set; }
        public virtual DbSet<Resident> Residents { get; set; }
        public virtual DbSet<Service> Services { get; set; }
        public virtual DbSet<Symptom> Symptoms { get; set; }
        public virtual DbSet<Table> Tables { get; set; }
    
        public virtual int AddCHW(string theUserName, string thePassword, string theFirstName, string theLastName, string theUserEmail, string theUserPhoneNumber)
        {
            var theUserNameParameter = theUserName != null ?
                new ObjectParameter("theUserName", theUserName) :
                new ObjectParameter("theUserName", typeof(string));
    
            var thePasswordParameter = thePassword != null ?
                new ObjectParameter("thePassword", thePassword) :
                new ObjectParameter("thePassword", typeof(string));
    
            var theFirstNameParameter = theFirstName != null ?
                new ObjectParameter("theFirstName", theFirstName) :
                new ObjectParameter("theFirstName", typeof(string));
    
            var theLastNameParameter = theLastName != null ?
                new ObjectParameter("theLastName", theLastName) :
                new ObjectParameter("theLastName", typeof(string));
    
            var theUserEmailParameter = theUserEmail != null ?
                new ObjectParameter("theUserEmail", theUserEmail) :
                new ObjectParameter("theUserEmail", typeof(string));
    
            var theUserPhoneNumberParameter = theUserPhoneNumber != null ?
                new ObjectParameter("theUserPhoneNumber", theUserPhoneNumber) :
                new ObjectParameter("theUserPhoneNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddCHW", theUserNameParameter, thePasswordParameter, theFirstNameParameter, theLastNameParameter, theUserEmailParameter, theUserPhoneNumberParameter);
        }
    
        public virtual int AddResident(Nullable<int> residenceID, string firstName, string lastName, Nullable<System.DateTime> dateOfBirth, string relationshipHOH, string gender, Nullable<int> familySize)
        {
            var residenceIDParameter = residenceID.HasValue ?
                new ObjectParameter("ResidenceID", residenceID) :
                new ObjectParameter("ResidenceID", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var dateOfBirthParameter = dateOfBirth.HasValue ?
                new ObjectParameter("DateOfBirth", dateOfBirth) :
                new ObjectParameter("DateOfBirth", typeof(System.DateTime));
    
            var relationshipHOHParameter = relationshipHOH != null ?
                new ObjectParameter("RelationshipHOH", relationshipHOH) :
                new ObjectParameter("RelationshipHOH", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var familySizeParameter = familySize.HasValue ?
                new ObjectParameter("FamilySize", familySize) :
                new ObjectParameter("FamilySize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddResident", residenceIDParameter, firstNameParameter, lastNameParameter, dateOfBirthParameter, relationshipHOHParameter, genderParameter, familySizeParameter);
        }
    
        public virtual ObjectResult<string> RetrievePassword(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("RetrievePassword", usernameParameter, passwordParameter);
        }
    }
}
